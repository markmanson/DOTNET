<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EmployeesTerritories" targetNamespace="http://tempuri.org/EmployeesTerritories.xsd" xmlns:mstns="http://tempuri.org/EmployeesTerritories.xsd" xmlns="http://tempuri.org/EmployeesTerritories.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="Northwind_AnkitConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Northwind_AnkitConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.Northwind_AnkitConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTerritoriesTableAdapter" GeneratorDataComponentClassName="EmployeeTerritoriesTableAdapter" Name="EmployeeTerritories" UserDataComponentName="EmployeeTerritoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Northwind_AnkitConnectionString (Web.config)" DbObjectName="Northwind_Ankit.dbo.EmployeeTerritories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EmployeeTerritories] WHERE (([EmployeeID] = @Original_EmployeeID) AND ([TerritoryID] = @Original_TerritoryID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EmployeeTerritories] ([EmployeeID], [TerritoryID]) VALUES (@EmployeeID, @TerritoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EmployeeID, TerritoryID FROM dbo.EmployeeTerritories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EmployeeTerritories] SET [EmployeeID] = @EmployeeID, [TerritoryID] = @TerritoryID WHERE (([EmployeeID] = @Original_EmployeeID) AND ([TerritoryID] = @Original_TerritoryID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeID" DataSetColumn="EmployeeID" />
              <Mapping SourceColumn="TerritoryID" DataSetColumn="TerritoryID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EmployeesTerritories" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="EmployeesTerritories" msprop:Generator_UserDSName="EmployeesTerritories" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EmployeeTerritories" msprop:Generator_UserTableName="EmployeeTerritories" msprop:Generator_RowDeletedName="EmployeeTerritoriesRowDeleted" msprop:Generator_TableClassName="EmployeeTerritoriesDataTable" msprop:Generator_RowChangedName="EmployeeTerritoriesRowChanged" msprop:Generator_RowClassName="EmployeeTerritoriesRow" msprop:Generator_RowChangingName="EmployeeTerritoriesRowChanging" msprop:Generator_RowEvArgName="EmployeeTerritoriesRowChangeEvent" msprop:Generator_RowEvHandlerName="EmployeeTerritoriesRowChangeEventHandler" msprop:Generator_TablePropName="EmployeeTerritories" msprop:Generator_TableVarName="tableEmployeeTerritories" msprop:Generator_RowDeletingName="EmployeeTerritoriesRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeID" msprop:Generator_UserColumnName="EmployeeID" msprop:Generator_ColumnPropNameInRow="EmployeeID" msprop:Generator_ColumnVarNameInTable="columnEmployeeID" msprop:Generator_ColumnPropNameInTable="EmployeeIDColumn" type="xs:int" />
              <xs:element name="TerritoryID" msprop:Generator_UserColumnName="TerritoryID" msprop:Generator_ColumnPropNameInRow="TerritoryID" msprop:Generator_ColumnVarNameInTable="columnTerritoryID" msprop:Generator_ColumnPropNameInTable="TerritoryIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EmployeeTerritories" />
      <xs:field xpath="mstns:EmployeeID" />
      <xs:field xpath="mstns:TerritoryID" />
    </xs:unique>
  </xs:element>
</xs:schema>